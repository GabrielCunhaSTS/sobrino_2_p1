/* CONFIGURA√á√ïES GERAIS PARA MELHOR VISUALIZA√á√ÉO */
body {
    font-family: Arial, sans-serif;
    line-height: 1.6;
    color: #333;
    background-color: #f4f4f4;
    padding: 20px;
}
.container {
    background-color: #fff;
    padding: 20px;
    margin-bottom: 25px;
    border-radius: 8px;
    box-shadow: 0 2px 5px rgba(0,0,0,0.1);
}
h1, h2, h3 {
    color: #0056b3;
}
code {
    background-color: #eee;
    padding: 2px 6px;
    border-radius: 4px;
    font-family: Consolas, monospace;
}

/* --- 1. SELETORES E COMBINADORES --- */

/* 1.1 Rela√ß√µes de Descend√™ncia */

/* EXERC√çCIO (Descendente):
    Selecione QUALQUER link <a> que esteja DENTRO de um item de lista <li>,
    n√£o importa o qu√£o profundo ele esteja. O espa√ßo √© o combinador de descendente.
    Resultado esperado: Todos os links na primeira lista ficar√£o azuis. */
#container-descendencia li a {
    color: rgb(224, 0, 0);
}

/* EXERC√çCIO (Filho Direto >):
    Selecione APENAS o <li> que √© FILHO DIRETO da <ul> com id="lista-pai".
    O sinal '>' garante que apenas o n√≠vel imediatamente abaixo seja selecionado.
    Resultado esperado: Apenas "Filho 1" e "Filho 2" ter√£o um fundo amarelo. O "Neto" n√£o ser√° afetado. */
#lista-pai > li {
    background-color: rgb(199, 199, 21);
}


/* 1.2 Seletor Universal (*) */

/* EXERC√çCIO (Reset B√°sico):
    O seletor universal '*' seleciona TODOS os elementos.
    √â usado para resets. Aqui, garantimos que todos os elementos
    tenham uma margem e preenchimento zerados por padr√£o.
    (Est√° comentado para n√£o afetar o resto da p√°gina)
*/
/*
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}
*/

/* EXERC√çCIO (Universal com Escopo):
    Selecione TODOS os filhos DIRETOS da tag <address> e aplique uma borda.
    Resultado esperado: O <p> e o <a> dentro de <address> ter√£o uma borda vermelha. */
#contato > * {
    border: 1px solid red;
    display: block; /* Apenas para visualiza√ß√£o */
    margin: 5px;
}

/* 1.3 Heran√ßa (inherit) */

/* Por padr√£o, elementos de formul√°rio como <select> e <button> n√£o herdam
    a fonte do corpo (body) e usam uma fonte padr√£o do sistema. */

/* EXERC√çCIO:
    Fa√ßa o elemento <select> HERDAR (inherit) a mesma fam√≠lia de fontes
    definida para o elemento <body>.
    Resultado esperado: A fonte do seletor de op√ß√µes ser√° a mesma do resto do texto. */
#seletor-heranca {
    font-family: inherit;
    font-size: inherit;
}


/* 1.4 Combinadores de Irm√£os (~ e +) */

/* EXERC√çCIO (Irm√£o Adjacente +):
    Selecione APENAS o primeiro par√°grafo <p> que vem IMEDIATAMENTE AP√ìS o <h2>.
    O '+' afeta apenas o vizinho mais pr√≥ximo.
    Resultado esperado: Apenas "Este √© o irm√£o adjacente" ficar√° em it√°lico. */
#irmaos h2 + p {
    font-style: italic;
    color: green;
}

/* EXERC√çCIO (Irm√£o Geral ~):
    Selecione TODOS os par√°grafos <p> que s√£o irm√£os e v√™m DEPOIS do <h2>.
    O '~' afeta todos os irm√£os que seguem, n√£o apenas o primeiro.
    Resultado esperado: Todos os par√°grafos ap√≥s o h2 ter√£o um fundo cinza claro. */
#irmaos h2 ~ p {
    background-color: #e0e0e0;
}


/* 1.5 Pseudo-classes (:) */

/* EXERC√çCIO (Estados de Intera√ß√£o):
    Altere a cor dos links na navega√ß√£o com base na intera√ß√£o do usu√°rio.
    :link    -> Link que ainda n√£o foi visitado.
    :visited -> Link que j√° foi visitado.
    :hover   -> Quando o mouse est√° sobre o link.
    :active  -> No momento exato em que o link √© clicado.
*/
.nav-link:link { color: #007bff; }
.nav-link:visited { color: #6f42c1; }
.nav-link:hover { text-decoration: underline; color: #0056b3; }
.nav-link:active { color: #ff4500; }

/* EXERC√çCIO (Pseudo-classes Estruturais):
    Estilize a lista de forma alternada (listras de zebra).
    :nth-child(even) -> Seleciona os filhos pares (2, 4, 6...).
    :nth-child(odd)  -> Seleciona os filhos √≠mpares (1, 3, 5...).
    Resultado esperado: Os itens pares da lista ter√£o fundo cinza. */
#lista-estrutural li:nth-child(even) {
    background-color: #f2f2f2;
}
/* Pinte o PRIMEIRO item de verde. */
#lista-estrutural li:first-child {
    font-weight: bold;
    color: green;
}
/* Pinte o √öLTIMO item de vermelho. */
#lista-estrutural li:last-child {
    font-weight: bold;
    color: red;
}


/* 1.6 Pseudo-elementos (::) */

/* EXERC√çCIO:
    Use pseudo-elementos para estilizar partes espec√≠ficas do par√°grafo.
    ::first-letter -> Estiliza a primeira letra para que pare√ßa um capitular.
    ::first-line   -> Estiliza a primeira linha do texto.
    Resultado esperado: A letra 'L' ser√° grande e a primeira linha estar√° em negrito. */
#paragrafo-pseudo::first-letter {
    font-size: 2.5em;
    color: #0056b3;
    float: left;
    margin-right: 5px;
    line-height: 1;
}
#paragrafo-pseudo::first-line {
    font-weight: bold;
}

/* EXERC√çCIO:
    Use ::before e ::after para adicionar conte√∫do decorativo que n√£o est√° no HTML.
    A propriedade 'content' √© obrigat√≥ria.
    Resultado esperado: Um emoji de aspas aparecer√° antes e depois da cita√ß√£o. */
#citacao::before {
    content: "‚Äú ";
    font-size: 1.2em;
}
#citacao::after {
    content: " ‚Äù";
    font-size: 1.2em;
}


/* 1.7 Seletores de Atributo e Wildcards */

/* EXERC√çCIO:
    Selecione os links <a> com base no valor de seu atributo 'href'.
    [href^="..."] -> O valor COME√áA COM.
    [href$="..."] -> O valor TERMINA COM.
    [href*="..."] -> O valor CONT√âM.
    Resultado esperado: Cada link ter√° um √≠cone e cor diferente com base em seu destino. */

/* Come√ßa com "tel:" (telefone) */
a[href^="tel"] { color: orange; }
a[href^="tel"]::before { content: "üìû "; }

/* Termina com ".pdf" */
a[href$=".pdf"] { color: #d93025; }
a[href$=".pdf"]::before { content: "üìÑ "; }

/* Cont√©m "google" */
a[href*="google"] { color: #4285F4; }
a[href*="google"]::before { content: "üîç "; }